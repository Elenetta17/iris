"""add database strategy

Revision ID: e887befec67e
Revises: 053cfa130101
Create Date: 2022-01-12 15:10:49.799336

"""
import fastapi_users_db_sqlalchemy
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "e887befec67e"
down_revision = "053cfa130101"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "accesstoken",
        sa.Column("token", sa.String(length=43), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("user_id", fastapi_users_db_sqlalchemy.guid.GUID(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="cascade"),
        sa.PrimaryKeyConstraint("token"),
    )
    op.create_index(
        op.f("ix_accesstoken_created_at"), "accesstoken", ["created_at"], unique=False
    )
    op.drop_index("ix_oauth_account_account_id", table_name="oauth_account")
    op.drop_index("ix_oauth_account_oauth_name", table_name="oauth_account")
    op.drop_table("oauth_account")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.create_table(
        "oauth_account",
        sa.Column("id", postgresql.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "oauth_name", sa.VARCHAR(length=100), autoincrement=False, nullable=False
        ),
        sa.Column(
            "access_token", sa.VARCHAR(length=1024), autoincrement=False, nullable=False
        ),
        sa.Column("expires_at", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "refresh_token", sa.VARCHAR(length=1024), autoincrement=False, nullable=True
        ),
        sa.Column(
            "account_id", sa.VARCHAR(length=320), autoincrement=False, nullable=False
        ),
        sa.Column(
            "account_email", sa.VARCHAR(length=320), autoincrement=False, nullable=False
        ),
        sa.Column("user_id", postgresql.UUID(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name="oauth_account_user_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="oauth_account_pkey"),
    )
    op.create_index(
        "ix_oauth_account_oauth_name", "oauth_account", ["oauth_name"], unique=False
    )
    op.create_index(
        "ix_oauth_account_account_id", "oauth_account", ["account_id"], unique=False
    )
    op.drop_index(op.f("ix_accesstoken_created_at"), table_name="accesstoken")
    op.drop_table("accesstoken")
    # ### end Alembic commands ###
